# This is a basic workflow for continuous integration and deployment of ParAutomatik

# Name of the workflow

name: ci-cd

run-name: ${{ github.actor}} updated the ParAutomatik package

on: [push, pull_request]

jobs:
  # This workflow contains a single job called "ci"
  ci:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      # Set up a Python environment for use in actions
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

    # This workflow contains a single job called "build"
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest tests/ --cov=parautomatik --cov-report=xml

      # Might be nice to add a later stage
      # - name: Automatic PEP8 formatting with black
      #   uses: psf/black@stable

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml   # coverage report

      - name: Build documentation
        run: poetry run make clean html --directory docs/

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html/
      #     force_orphan: true

  cd:
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      # - name: Python Semantic Release with Poetry
      #   uses: bjoluc/semantic-release-config-poetry@v2

      # Can't use: relekang/python-semantic-release@master because
      # it's running Python 3.7, and Tryceratops requires >=3.8

      - name: Cache poetry dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry config virtualenvs.create false
          poetry install

      - name: Python Semantic Release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
          poetry run semantic-release publish -D commit_author="github-actions <action@github.com>"
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          # PYPI_TOKEN: ${{secrets.PYPI_TOKEN}}

      # - name: Python Semantic Release
      #   run: pip install poetry==1.1.15
      # - uses: relekang/python-semantic-release@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
          # repository_username: __token__
          # repository_password: ${{ secrets.PYPI_TOKEN }}
      
      # - name: Use Python Semantic Release to prepare release
      #   env:
      #     # This token is created automatically by GH Actions
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #       git config user.name github-actions
      #       git config user.email github-actions@github.com
      #       echo 
      #       poetry run semantic-release publish

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Test install from TestPyPI
        run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            parautomatik

      # - name: Publish to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     user: __token__
      #     password: {% raw %}${{ secrets.PYPI_API_TOKEN }}{% endraw %}